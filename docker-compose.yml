version: '3'

services:
  app:
    restart: on-failure:3
    build:
      context: .
    ports:
      - "80:8000"
    volumes:
      - ./app:/app
    command: >
      sh -c "
             python manage.py wait_for_db &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py loaddata data.json &&
             python manage.py loaddata education.json &&
             python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.dev
    depends_on:
      - db
  db:
    restart: on-failure:3
    image: postgres:latest
    env_file:
      - ./.env.dev
    volumes: 
      - pgdata:/var/lib/postgresql/data
  redis:
    restart: on-failure:3
    image: redis:alpine
  celery:
    restart: on-failure:3
    build:
      context: .
    command: celery -A app worker -l info
    volumes:
      - ./app:/app
    env_file:
      - ./.env.dev
    depends_on:
      - db
      - redis
      - app
  celery-beat:
    restart: on-failure:3
    build: 
      context: .
    command: celery -A app beat -l info
    volumes:
      - ./app:/app
    depends_on:
      - redis
volumes:
  pgdata: